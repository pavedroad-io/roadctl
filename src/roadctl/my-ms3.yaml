community:
  community-files:
  - {name: CODE_OF_CONDUCT.md, path: ., src: templatedir}
  - {name: CONTRIBUTING.md, path: ., src: templatedir}
  - {name: COVERNANCE.md, path: ., src: templatedir}
  - {name: MEETING.md, path: ., src: templatedir}
  - {name: OWNERS.md, path: ., src: templatedir}
  - {name: SECURITY.md, path: ., src: templatedir}
  - {md5: '123123123123123123231', name: SUPPORT.md, path: ., src: 'git-api://templates.pavedroad.io/templates/oos/support.md'}
  - {name: ROADMAP.md, path: ., src: 'https://w.pavedroad.io/templates/roadmap.md'}
  - {name: SECURITY.md, path: ., src: templatedir}
  - {name: ROADMAP.md, path: ., src: 'https://w.pavedroad.io/templates/roadmap.md'}
  description: list of community files to include
info: {api-version: 1.0.0, id: datamgr, name: users, organization: acme, release-status: alpha,
  version: 1.0.0}
project:
  dependencies:
  - command: start --insecure
    comments: map http port to 6060 to avoid conflict with k8s
    docker-cockroahdb: null
    image: cockroachdb/cockroach:1.12
    name: cockroachdb
    ports:
    - {external: '26257', internal: '26257'}
    - {external: '6060', internal: '8080'}
    volumes: []
  - command: start --insecure
    comments: used for events
    docker-kafka: null
    image: wurstmeister/kafka
    name: kafka
    ports:
    - {external: '9094', internal: '9092'}
    topics: [microservice-emit, microservice-consume]
    volumes: []
  description: Microservice for managing a backend persistent store for an object
  integrations:
  - badges:
    - {enable: true, link: '<img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fpavedroad-io%2Fkevlar-web.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fpavedroad-io%2Fkevlar-web?ref=badge_shield">',
      name: FOSSA}
    name: fossa
  - sonar-cloud-config:
      key: "pavedroad-io_users"
      login: "3faaf04fd0f66a33ced5dea109847fa3dc6d40a4"
      options:
        badges:
        - {enable: true, link: '<img src="https://sonarcloud.io/api/project_badges/measure?project=pavedroad-io_kevlar-web&metric=alert_status">',
          name: Alert status}
        - {enable: true, link: '<img src="https://sonarcloud.io/api/project_badges/measure?project=pavedroad-io_kevlar-web&metric=bugs">',
          name: bugs}
        - {enable: true, link: '<a href="https://sonarcloud.io/api/project_badges/measure?project=pavedroad-io_kevlar-web&metric=complexity">Complexity</a>',
          name: Complexity}
        - {enable: true, link: '<a href="https://sonarcloud.io/api/project_badges/measure?project=pavedroad-io_kevlar-web&metric=cognitive_complexity">Cognitive Complexity</a>',
          name: Cognitive complexity}
        - {enable: true, link: '<img src="https://sonarcloud.io/api/project_badges/measure?project=pavedroad-io_kevlar-web&metric=code_smells">',
          name: Code smells}
        - {enable: true, link: '<img src="https://sonarcloud.io/api/project_badges/measure?project=pavedroad-io_kevlar-web&metric=coverage">',
          name: Coverage}
        - {enable: true, link: '<img src="https://sonarcloud.io/api/project_badges/measure?project=pavedroad-io_kevlar-web&metric=ncloc">',
          name: Lines of code}
        - {enable: true, link: '<img src="https://sonarcloud.io/api/project_badges/measure?project=pavedroad-io_kevlar-web&metric=duplicated_lines_density">',
          name: Duplicate line desnity}
        - {enable: true, link: '<img src="https://sonarcloud.io/api/project_badges/measure?project=pavedroad-io_kevlar-web&metric=security">',
          name: Security}
        - {enable: true, link: '<img src="https://sonarcloud.io/api/project_badges/measure?project=pavedroad-io_kevlar-web&metric=sqale_index">',
          name: Time to fix technical debt}
        - {enable: true, link: '<img src="https://sonarcloud.io/api/project_badges/measure?project=pavedroad-io_kevlar-web&metric=vulnerabilities">',
          name: Vulnerabilities}
        coverage: {enable: true, report: $ref->go.coverage.artifacts}
        go-sec: {enable: true, report: $ref->go.sec.artifacts}
        lint: {enable: true, report: $ref->go.lint.artifacts}
    configuration-file: {artifacts-dir: ./artifacts, name: sonar-project.properties,
      path: ., src: templatedir}
    name: sonarcloud
  license: Apache2
  maintainer: {email: foo@bar.com, name: goffy, slack: pavedroad.slack.com, web: 'http://www.foo.bar'}
  project-files:
  - {description: Information about the project and project status, name: README.md,
    path: ., src: templatedir}
  - {description: Summary documentation in swagger 2.0 and godoc format, name: templateDoc.go,
    path: ., src: templatedir}
  - {description: Main entry point for microservice, name: templateMain.go, path: .,
    src: templatedir}
  - {description: Business logic for the application, name: templateApp.go, path: .,
    src: templatedir}
  - {description: Generated data model for the microservice, name: templateModel.go,
    path: ., src: templatedir}
  - {description: Generated test cases for microservice, name: template_test.go, path: .,
    src: templatedir}
tables:
- columns:
  - {constraints: '', mapped-name: id, modifiers: '', name: id, type: string}
  - {constraints: '', mapped-name: updated, modifiers: '', name: updated, type: string}
  - {constraints: '', mapped-name: created, modifiers: '', name: created, type: string}
  parent-tables: ''
  table-name: users
  table-type: jsonb
- columns:
  - {constraints: '', mapped-name: id, modifiers: '', name: id, type: string}
  parent-tables: users
  table-name: metadata
- columns:
  - {constraints: '', mapped-name: key, modifiers: '', name: key, type: string}
  parent-tables: metadata
  table-name: test
